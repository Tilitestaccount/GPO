local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()

getgenv().SecureMode = true

local Window = Rayfield:CreateWindow({
	Name = "XN Hub",
	LoadingTitle = "XN Hub",
	LoadingSubtitle = "By Xno",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "XN Hub",
	},
	Discord = {
		Enabled = true,
		Invite = "3esCY2q32n", -- The Discord invite code, do not include discord.gg/
		RememberJoins = false, -- Set this to false to make them join the discord every time they load it up
	},
	KeySystem = true, -- Set this to true to use our key system
	KeySettings = {
		Title = "XN Hub",
		Subtitle = "Key System",
		Note = "Join the discord (https://discord.gg/3esCY2q32n)",
		FileName = "XN Hub",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "ohio",
	},
})
Rayfield:Notify({
	Title = "Welcome to XN Hub",
	Content = "Notification Content",
	Duration = 6.5,
	Image = 4483362458,
	Actions = { -- Notification Buttons
		Ignore = {
			Name = "Okay!",
			Callback = function()
				print("The user tapped Okay!")
			end,
		},
	},
})

local Main = Window:CreateTab("Main", 4483362458) -- Title, Image
local Section = Main:CreateSection("GPO")
local Button = Main:CreateButton({
	Name = "Infinite Jump",
	Callback = function()
		local g = getgenv()

		if g._swim then
			g._swim:Disconnect()
			g._swim = nil
		end

		local u = game:GetService("UserInputService")
		g._swim = u.InputBegan:Connect(function(input, gameProcessedEvent)
			if gameProcessedEvent then
				return
			end

			if input.KeyCode == Enum.KeyCode.Space then
				game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end)
	end,
})

local Slider = Main:CreateSlider({
	Name = "WalkSpeed (cant revert)",
	Range = { 0, 100 },
	Increment = 10,
	Suffix = "Speed",
	CurrentValue = 10,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		-- The function that takes place when the slider changes
		-- The variable (Value) is a number which correlates to the value the slider is currently at
	end,
})
getgenv().Speed = 70
local mt = getrawmetatable(game)
local old = mt.__newindex
setreadonly(mt, false)
mt.__newindex = newcclosure(function(t, k, v)
	pcall(function()
		if t == game:GetService("Players").LocalPlayer.Character.Humanoid and k == "WalkSpeed" then
			v = getgenv().Speed
		end
	end)
	return old(t, k, v)
end)

-- Main:CreateSlider("JumpPower", 50, 200, function(t)
-- 	getgenv().Speed = 70
-- 	local mt = getrawmetatable(game)
-- 	local old = mt.__newindex
-- 	setreadonly(mt, false)
-- 	mt.__newindex = newcclosure(function(t, k, v)
-- 		pcall(function()
-- 			if t == game:GetService("Players").LocalPlayer.Character.Humanoid and k == "JumpPower" then
-- 				v = getgenv().Speed
-- 			end
-- 		end)
-- 		return old(t, k, v)
-- 	end)
-- end)
-- Main:CreateLabel("Put speed 20-29 and its auto no stun.")

local Button = Main:CreateButton({
	Name = "ESP (Right Alt)",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/XnoWs/GPO/main/readme"))()
	end,
})

local Toggle = Main:CreateToggle({
	Name = "troll toggle",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()

		bind = "y"
		bind2 = "n"

		mouse.KeyDown:connect(function(key)
			if key == bind then
				player.Character.HumanoidRootPart.CFrame = CFrame.new(1254.09656, 137.906067, -172.128204)
			end
		end)

		mouse.KeyDown:connect(function(key2)
			if key2 == bind2 then
				_G.HeadSize = 50
				_G.Disabled = true

				if _G.Disabled then
					for i, v in next, game:GetService("Players"):GetPlayers() do
						if v.Name ~= game:GetService("Players").LocalPlayer.Name then
							pcall(function()
								v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
								v.Character.HumanoidRootPart.Transparency = 0.9
								v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
								v.Character.HumanoidRootPart.Material = "Neon"
								v.Character.HumanoidRootPart.CanCollide = false
								game.StarterGui:SetCore(
									"SendNotification",
									{ Title = "Hitbox Applied,press N.", Text = "Bind Button is N.", Duration = 0 }
								)
							end)
						end
					end
				end
			end
		end)
	end,
})

local Button = Main:CreateButton({
	Name = "Hitbox Expander (N to toggle)",
	Callback = function()
		local cool = loadstring(game:HttpGet("https://raw.githubusercontent.com/XnoWs/GPO/main/Luas"))()
	end,
})
